import unittest
from polybot.polygons import Vector
from polybot.polygons.DirectedEdge import DirectedEdge


class TestDirectedEdge(unittest.TestCase):

    def test_left_of(self):
        point00 = Vector(0, 0)
        point11 = Vector(1, 1)
        point01 = Vector(0, 1)
        point10 = Vector(1, 0)
        point22 = Vector(2, 2)
        self.assertTrue(DirectedEdge(point00, point11).left_of(point01))
        self.assertFalse(DirectedEdge(point00, point11).left_of(point10))
        self.assertFalse(DirectedEdge(point11, point00).left_of(point01))
        self.assertTrue(DirectedEdge(point11, point00).left_of(point10))
        self.assertFalse(DirectedEdge(point00, point11).left_of(point22))
        self.assertFalse(DirectedEdge(point11, point00).left_of(point22))

    def test_right_of(self):
        point00 = Vector(0, 0)
        point11 = Vector(1, 1)
        point01 = Vector(0, 1)
        point10 = Vector(1, 0)
        point22 = Vector(2, 2)
        self.assertFalse(DirectedEdge(point00, point11).right_of(point01))
        self.assertTrue(DirectedEdge(point00, point11).right_of(point10))
        self.assertTrue(DirectedEdge(point11, point00).right_of(point01))
        self.assertFalse(DirectedEdge(point11, point00).right_of(point10))
        self.assertFalse(DirectedEdge(point00, point11).right_of(point22))
        self.assertFalse(DirectedEdge(point11, point00).right_of(point22))

    def test_collinear(self):
        point00 = Vector(0, 0)
        point11 = Vector(1, 1)
        point01 = Vector(0, 1)
        point22 = Vector(2, 2)
        point10 = Vector(1, 0)
        self.assertTrue(DirectedEdge(point00, point11).collinear(point22))
        self.assertTrue(DirectedEdge(point11, point00).collinear(point22))
        self.assertFalse(DirectedEdge(point00, point11).collinear(point01))
        self.assertFalse(DirectedEdge(point00, point10).collinear(point01))

    def test_intersect_when_other_is_collinear(self):
        edge3366 = DirectedEdge(Vector(3, 3), Vector(6, 6))
        edge6633 = DirectedEdge(Vector(6, 6), Vector(3, 3))
        edge1122 = DirectedEdge(Vector(1, 1), Vector(2, 2))
        edge2233 = DirectedEdge(Vector(2, 2), Vector(3, 3))
        edge3344 = DirectedEdge(Vector(3, 3), Vector(4, 4))
        edge4455 = DirectedEdge(Vector(4, 4), Vector(5, 5))
        edge5566 = DirectedEdge(Vector(5, 5), Vector(6, 6))
        edge6677 = DirectedEdge(Vector(6, 6), Vector(7, 7))
        edge7788 = DirectedEdge(Vector(7, 7), Vector(8, 8))
        self.assertEqual(DirectedEdge.intersect(edge3366, edge1122), (DirectedEdge.IntersectionType.NONE, []))
        self.assertEqual(DirectedEdge.intersect(edge6633, edge1122), (DirectedEdge.IntersectionType.NONE, []))
        self.assertEqual(DirectedEdge.intersect(edge3366, edge2233), (DirectedEdge.IntersectionType.OVERLAP, [Vector(3, 3)]))
        self.assertEqual(DirectedEdge.intersect(edge6633, edge2233), (DirectedEdge.IntersectionType.OVERLAP, [Vector(3, 3)]))
        self.assertEqual(DirectedEdge.intersect(edge3366, edge3344), (DirectedEdge.IntersectionType.OVERLAP, [Vector(3, 3), Vector(4, 4)]))
        self.assertEqual(DirectedEdge.intersect(edge6633, edge3344), (DirectedEdge.IntersectionType.OVERLAP, [Vector(3, 3), Vector(4, 4)]))
        self.assertEqual(DirectedEdge.intersect(edge3366, edge4455), (DirectedEdge.IntersectionType.OVERLAP, [Vector(4, 4), Vector(5, 5)]))
        self.assertEqual(DirectedEdge.intersect(edge6633, edge4455), (DirectedEdge.IntersectionType.OVERLAP, [Vector(4, 4), Vector(5, 5)]))
        self.assertEqual(DirectedEdge.intersect(edge3366, edge5566), (DirectedEdge.IntersectionType.OVERLAP, [Vector(5, 5), Vector(6, 6)]))
        self.assertEqual(DirectedEdge.intersect(edge6633, edge5566), (DirectedEdge.IntersectionType.OVERLAP, [Vector(5, 5), Vector(6, 6)]))
        self.assertEqual(DirectedEdge.intersect(edge3366, edge6677), (DirectedEdge.IntersectionType.OVERLAP, [Vector(6, 6)]))
        self.assertEqual(DirectedEdge.intersect(edge6633, edge6677), (DirectedEdge.IntersectionType.OVERLAP, [Vector(6, 6)]))
        self.assertEqual(DirectedEdge.intersect(edge3366, edge7788), (DirectedEdge.IntersectionType.NONE, []))
        self.assertEqual(DirectedEdge.intersect(edge6633, edge7788), (DirectedEdge.IntersectionType.NONE, []))

    def test_intersect_when_other_is_not_collinear_and_intersect(self):
        edge3366 = DirectedEdge(Vector(3, 3), Vector(6, 6))
        edge6633 = DirectedEdge(Vector(6, 6), Vector(3, 3))
        edge3663 = DirectedEdge(Vector(3, 6), Vector(6, 3))
        edge3644 = DirectedEdge(Vector(3, 6), Vector(4, 4))
        edge4436 = DirectedEdge(Vector(4, 4), Vector(3, 6))
        edge4224 = DirectedEdge(Vector(4, 2), Vector(2, 4))
        edge2442 = DirectedEdge(Vector(2, 4), Vector(4, 2))
        edge4233 = DirectedEdge(Vector(4, 2), Vector(3, 3))
        edge2433 = DirectedEdge(Vector(2, 4), Vector(3, 3))
        edge3342 = DirectedEdge(Vector(3, 3), Vector(4, 2))
        edge3324 = DirectedEdge(Vector(3, 3), Vector(2, 4))
        self.assertEqual(DirectedEdge.intersect(edge3366, edge3663), (DirectedEdge.IntersectionType.POINT, [Vector(4.5, 4.5)]))
        self.assertEqual(DirectedEdge.intersect(edge6633, edge3663), (DirectedEdge.IntersectionType.POINT, [Vector(4.5, 4.5)]))
        self.assertEqual(DirectedEdge.intersect(edge3366, edge3644), (DirectedEdge.IntersectionType.POINT, [Vector(4, 4)]))
        self.assertEqual(DirectedEdge.intersect(edge6633, edge3644), (DirectedEdge.IntersectionType.POINT, [Vector(4, 4)]))
        self.assertEqual(DirectedEdge.intersect(edge3366, edge4436), (DirectedEdge.IntersectionType.POINT, [Vector(4, 4)]))
        self.assertEqual(DirectedEdge.intersect(edge6633, edge4436), (DirectedEdge.IntersectionType.POINT, [Vector(4, 4)]))
        self.assertEqual(DirectedEdge.intersect(edge3366, edge4224), (DirectedEdge.IntersectionType.POINT, [Vector(3, 3)]))
        self.assertEqual(DirectedEdge.intersect(edge6633, edge4224), (DirectedEdge.IntersectionType.POINT, [Vector(3, 3)]))
        self.assertEqual(DirectedEdge.intersect(edge3366, edge2442), (DirectedEdge.IntersectionType.POINT, [Vector(3, 3)]))
        self.assertEqual(DirectedEdge.intersect(edge6633, edge2442), (DirectedEdge.IntersectionType.POINT, [Vector(3, 3)]))
        self.assertEqual(DirectedEdge.intersect(edge3366, edge4233), (DirectedEdge.IntersectionType.POINT, [Vector(3, 3)]))
        self.assertEqual(DirectedEdge.intersect(edge6633, edge4233), (DirectedEdge.IntersectionType.POINT, [Vector(3, 3)]))
        self.assertEqual(DirectedEdge.intersect(edge3366, edge2433), (DirectedEdge.IntersectionType.POINT, [Vector(3, 3)]))
        self.assertEqual(DirectedEdge.intersect(edge6633, edge2433), (DirectedEdge.IntersectionType.POINT, [Vector(3, 3)]))
        self.assertEqual(DirectedEdge.intersect(edge3366, edge3342), (DirectedEdge.IntersectionType.POINT, [Vector(3, 3)]))
        self.assertEqual(DirectedEdge.intersect(edge6633, edge3342), (DirectedEdge.IntersectionType.POINT, [Vector(3, 3)]))
        self.assertEqual(DirectedEdge.intersect(edge3366, edge3324), (DirectedEdge.IntersectionType.POINT, [Vector(3, 3)]))
        self.assertEqual(DirectedEdge.intersect(edge6633, edge3324), (DirectedEdge.IntersectionType.POINT, [Vector(3, 3)]))

    def test_intersect_when_other_is_parallel(self):
        edge3366 = DirectedEdge(Vector(3, 3), Vector(6, 6))
        edge6633 = DirectedEdge(Vector(6, 6), Vector(3, 3))
        edge1223 = DirectedEdge(Vector(1, 2), Vector(2, 3))
        edge2334 = DirectedEdge(Vector(2, 3), Vector(3, 4))
        edge3445 = DirectedEdge(Vector(3, 4), Vector(4, 5))
        edge4556 = DirectedEdge(Vector(4, 5), Vector(5, 6))
        edge5667 = DirectedEdge(Vector(5, 6), Vector(6, 7))
        edge6778 = DirectedEdge(Vector(6, 7), Vector(7, 8))
        edge7889 = DirectedEdge(Vector(7, 8), Vector(8, 9))
        self.assertEqual(DirectedEdge.intersect(edge3366, edge1223), (DirectedEdge.IntersectionType.NONE, []))
        self.assertEqual(DirectedEdge.intersect(edge6633, edge1223), (DirectedEdge.IntersectionType.NONE, []))
        self.assertEqual(DirectedEdge.intersect(edge3366, edge2334), (DirectedEdge.IntersectionType.NONE, []))
        self.assertEqual(DirectedEdge.intersect(edge6633, edge2334), (DirectedEdge.IntersectionType.NONE, []))
        self.assertEqual(DirectedEdge.intersect(edge3366, edge3445), (DirectedEdge.IntersectionType.NONE, []))
        self.assertEqual(DirectedEdge.intersect(edge6633, edge3445), (DirectedEdge.IntersectionType.NONE, []))
        self.assertEqual(DirectedEdge.intersect(edge3366, edge4556), (DirectedEdge.IntersectionType.NONE, []))
        self.assertEqual(DirectedEdge.intersect(edge6633, edge4556), (DirectedEdge.IntersectionType.NONE, []))
        self.assertEqual(DirectedEdge.intersect(edge3366, edge5667), (DirectedEdge.IntersectionType.NONE, []))
        self.assertEqual(DirectedEdge.intersect(edge6633, edge5667), (DirectedEdge.IntersectionType.NONE, []))
        self.assertEqual(DirectedEdge.intersect(edge3366, edge6778), (DirectedEdge.IntersectionType.NONE, []))
        self.assertEqual(DirectedEdge.intersect(edge6633, edge6778), (DirectedEdge.IntersectionType.NONE, []))
        self.assertEqual(DirectedEdge.intersect(edge3366, edge7889), (DirectedEdge.IntersectionType.NONE, []))
        self.assertEqual(DirectedEdge.intersect(edge6633, edge7889), (DirectedEdge.IntersectionType.NONE, []))

    def test_intersect_when_other_is_not_collinear_and_not_intersect(self):
        edge3366 = DirectedEdge(Vector(3, 3), Vector(6, 6))
        edge6633 = DirectedEdge(Vector(6, 6), Vector(3, 3))
        edge3645 = DirectedEdge(Vector(3, 6), Vector(4, 5))
        edge4536 = DirectedEdge(Vector(4, 5), Vector(3, 6))
        edge1331 = DirectedEdge(Vector(1, 3), Vector(3, 1))
        edge3113 = DirectedEdge(Vector(3, 1), Vector(1, 3))
        self.assertEqual(DirectedEdge.intersect(edge3366, edge3645), (DirectedEdge.IntersectionType.NONE, []))
        self.assertEqual(DirectedEdge.intersect(edge6633, edge3645), (DirectedEdge.IntersectionType.NONE, []))
        self.assertEqual(DirectedEdge.intersect(edge3366, edge4536), (DirectedEdge.IntersectionType.NONE, []))
        self.assertEqual(DirectedEdge.intersect(edge6633, edge4536), (DirectedEdge.IntersectionType.NONE, []))
        self.assertEqual(DirectedEdge.intersect(edge3366, edge1331), (DirectedEdge.IntersectionType.NONE, []))
        self.assertEqual(DirectedEdge.intersect(edge6633, edge1331), (DirectedEdge.IntersectionType.NONE, []))
        self.assertEqual(DirectedEdge.intersect(edge3366, edge3113), (DirectedEdge.IntersectionType.NONE, []))
        self.assertEqual(DirectedEdge.intersect(edge6633, edge3113), (DirectedEdge.IntersectionType.NONE, []))


if __name__ == "__main__":
    unittest.main()
